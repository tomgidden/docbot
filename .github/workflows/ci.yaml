name: build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - "release"
    #      - "master"
    tags:
      - "v*"
    paths-ignore:
      - ".github/workflows/*"

  pull_request:
    paths-ignore:
      - ".github/workflows/*"

    # paths-ignore:
    #   - '**.md'
  # pull_request:
  # paths-ignore:
  #   - '**.md'

env:
  DOCKERHUB_SLUG: ${{ github.repository }}
  GHCR_SLUG: ghcr.io/${{ github.repository }}

jobs:
  prepare:
    runs-on: ubuntu-latest

    if: github.event_name != 'pull_request'
    outputs:
      matrix: |
        ["linux/amd64", "linux/arm64", "linux/arm/v7", "linux/arm/v8"]

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
            ${{ env.GHCR_SLUG }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
      #      type=ref,event=branch
      - name: Rename meta bake definition file
        run: |
          mv "${{ steps.meta.outputs.bake-file }}" "/tmp/bake-meta.json"

      - name: Upload meta bake definition
        uses: actions/upload-artifact@v4
        with:
          name: bake-meta
          path: /tmp/bake-meta.json
          if-no-files-found: error
          retention-days: 1

  build:
    runs-on: ubuntu-latest

    if: github.event_name != 'pull_request'

    needs:
      - prepare

    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(needs.prepare.outputs.matrix) }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Download meta bake definition
        uses: actions/download-artifact@v4
        with:
          name: bake-meta
          path: /tmp

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: "--debug"

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          logout: false
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        id: bake
        uses: docker/bake-action@v5
        with:
          files: |
            .github/workflows/docker-bake.hcl
            /tmp/bake-meta.json
          targets: image
          sbom: true
          provenance: true
          set: |
            *.tags=
            *.platform=${{ matrix.platform }}
            *.cache-from=type=gha,scope=build-${{ env.PLATFORM_PAIR }}
            *.cache-to=type=gha,scope=build-${{ env.PLATFORM_PAIR }}
            *.output=type=image,"name=${{ env.DOCKERHUB_SLUG }},${{ env.GHCR_SLUG }}",push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          IMAGE_DIGEST="${{ fromJSON(steps.bake.outputs.metadata).image['containerimage.digest'] }}"
          echo "${IMAGE_DIGEST#sha256:}" > "/tmp/digests/${IMAGE_DIGEST#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest

    if: github.event_name != 'pull_request'

    needs:
      - build

    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Download meta bake definition
        uses: actions/download-artifact@v4
        with:
          name: bake-meta
          path: /tmp

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Note, I'm still not sure what's meant to be happening here. This is my best guess.

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          logout: false
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push (GHCR)
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create \
              $(jq -cr \
                '.target."docker-metadata-action".tags | map(select(startswith("${{ env.GHCR_SLUG }}")) | "-t " + .) | join(" ")' \
              /tmp/bake-meta.json) \
            $(printf '${{ env.GHCR_SLUG }}@sha256:%s ' *)

      - name: Inspect image (GHCR)
        id: inspect_ghcr
        run: |
          TAG=$(jq -r '.target."docker-metadata-action".args.DOCKER_META_VERSION' /tmp/bake-meta.json)
          docker buildx imagetools inspect \
            ${{ env.GHCR_SLUG }}:${TAG} \
            --format "{{json .Manifest}}" | jq -r '"GHCR_DIGEST=" + .digest' >> $GITHUB_ENV

      - name: Generate artifact attestation (GHCR)
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.GHCR_SLUG }}
          subject-digest: ${{ env.GHCR_DIGEST }}
          push-to-registry: true
#
#       - name: Login to DockerHub
#         uses: docker/login-action@v3
#         with:
#           registry: index.docker.io
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#       - name: Create manifest list and push (DockerHub)
#         working-directory: /tmp/digests
#         run: |
#           docker buildx imagetools create \
#               $(jq -cr \
#                 '.target."docker-metadata-action".tags | map(select(startswith("${{ env.DOCKERHUB_SLUG }}")) | "-t " + .) | join(" ")' \
#               /tmp/bake-meta.json) \
#               $(printf '${{ env.DOCKERHUB_SLUG }}@sha256:%s ' *)
#
#       - name: Inspect image (DockerHub)
#         id: inspect_dockerhub
#         run: |
#           TAG=$(jq -r '.target."docker-metadata-action".args.DOCKER_META_VERSION' /tmp/bake-meta.json)
#           docker buildx imagetools inspect \
#             ${{ env.DOCKERHUB_SLUG }}:${TAG} \
#             --format "{{json .Manifest}}" | jq -r '"DOCKERHUB_DIGEST=" + .digest' >> $GITHUB_ENV
#
#       - name: Generate artifact attestation (DockerHub)
#         uses: actions/attest-build-provenance@v1
#         with:
#           subject-name: ${{ env.DOCKERHUB_SLUG }}
#           subject-digest: ${{ env.DOCKERHUB_DIGEST }}
#           push-to-registry: true
